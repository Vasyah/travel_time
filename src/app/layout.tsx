'use client'

// import type {Metadata} from "next";
import {Geist, Geist_Mono} from "next/font/google";
import {Theme, ThemePreset,} from "@consta/uikit/Theme";
import {LayoutExampleBig} from "@/ui/Header/Header";
import React from "react";
import {TravelMenu} from "@/ui/Menu/Menu";
import '@consta/themes/Theme_color_highlightsGreenDefault';
import {Grid, GridItem} from "@consta/uikit/Grid";
import "./globals.css";
import './lib/zIndexes.css'
import {Layout} from "@consta/uikit/Layout";
import {SearchFeature} from "@/features/Search/ui/Search";
import {Text} from "@consta/uikit/Text";
import {QueryClient, QueryClientProvider, useQueryClient} from "@tanstack/react-query";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});
//
// export const metadata: Metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

const preset: ThemePreset = {
    color: {
        primary: 'highlightsGreenDefault', //основная цветовая схема, указано значение модификатора _color
        accent: 'highlightsGreenDefault', //акцентная цветовая схема, указано значение модификатора _color
        invert: 'highlightsGreenDefault', //инвертная цветовая схема, указывается значение модификатора _color
    },
    control: "gpnDefault", // указывается значение модификатора _control
    font: 'gpnDefault', // указывается значение модификатора _font
    size: 'gpnDefault', // указывается значение модификатора _size
    space: 'gpnDefault', // указывается значение модификатора _space
    shadow: 'gpnDefault', // указывается значение модификатора _shadow
};

const queryClient = new QueryClient()

export default function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {

    return (
        <html lang="en">
        <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <QueryClientProvider client={queryClient}>
            <Theme preset={preset}>
                <LayoutExampleBig/>
                <Grid cols={24} style={{minHeight: `calc(100vh - 64px)`,}}>
                    <GridItem col={2} style={{borderRight: '1px solid var(--color-bg-border)'}}>
                        <TravelMenu/>
                    </GridItem>
                    <GridItem col={22} style={{padding: '0 2.5rem'}}>
                        <Layout>
                            <Layout flex={3} style={{margin: '2.5rem 0'}}>
                                <SearchFeature/>
                            </Layout>
                            <Layout flex={2} direction={'column'} style={{margin: '1.5rem 0'}}>
                                <Text size="2xl" view={"success"}>Сегодня</Text>
                                <Text size="3xl" view={"success"}>Ср, 17 января 2020 г.</Text>
                            </Layout>
                        </Layout>
                        {children}
                    </GridItem>

                </Grid>
            </Theme>
        </QueryClientProvider>
        </body>
        </html>
    );
}
