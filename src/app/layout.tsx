"use client";

import { Geist, Geist_Mono } from "next/font/google";
import { Theme, ThemePreset } from "@consta/uikit/Theme";
import { LayoutExampleBig } from "@/ui/Header/Header";
import React, { useState } from "react";
import { TravelMenu } from "@/shared/ui/Menu/Menu";
import "@consta/themes/Theme_color_highlightsGreenDefault";
import "../shared/ui/globals.css";
import "@/features/lib/zIndexes.css";
import { SearchFeature } from "@/features/Search/ui/Search";
import { QueryClientProvider } from "@tanstack/react-query";
import { queryClient } from "@/shared/config/reactQuery";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import moment from "moment";
import { Col, ConfigProvider, Flex, Layout, Row } from "antd";
import { SafeHydrate } from "@/components/SafeHydrate/SafeHydrate";
import { Today } from "@/features/Today/Today";
import styles from "./main/layout.module.css";
import "moment/locale/ru";
import { useAuth } from "@/shared/lib/useAuth";

moment.locale("ru"); // Для локализации дат

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
//
// export const metadata: Metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

const preset: ThemePreset = {
  color: {
    primary: "highlightsGreenDefault", //основная цветовая схема, указано значение модификатора _color
    accent: "highlightsGreenDefault", //акцентная цветовая схема, указано значение модификатора _color
    invert: "highlightsGreenDefault", //инвертная цветовая схема, указывается значение модификатора _color
  },
  control: "gpnDefault", // указывается значение модификатора _control
  font: "gpnDefault", // указывается значение модификатора _font
  size: "gpnDefault", // указывается значение модификатора _size
  space: "gpnDefault", // указывается значение модификатора _space
  shadow: "gpnDefault", // указывается значение модификатора _shadow
};

moment.locale("ru");

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const currentDate = moment().locale("ru").format("dddd, D MMMM YYYY");

  return (
    <html lang="en">
      <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ConfigProvider
          theme={{
            token: {
              // Seed Token
              colorLink: "#00b96b",
              colorPrimary: "#00b96b",
              borderRadius: 2,

              // Alias Token
              colorBgContainer: "#f6ffed",
            },
          }}
        >
          <QueryClientProvider client={queryClient}>
            <Theme preset={preset}>
              <SafeHydrate>{children}</SafeHydrate>
            </Theme>
            <ReactQueryDevtools />
          </QueryClientProvider>
        </ConfigProvider>
      </body>
    </html>
  );
}
